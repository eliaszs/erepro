// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
import any "github.com/golang/protobuf/ptypes/any"
import duration "github.com/golang/protobuf/ptypes/duration"
import empty "github.com/golang/protobuf/ptypes/empty"
import _struct "github.com/golang/protobuf/ptypes/struct"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	Cut                  string   `protobuf:"bytes,1,opt,name=cut" json:"cut,omitempty"`
	Age                  string   `protobuf:"bytes,2,opt,name=age" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_5d79139a5e6db799, []int{0}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetCut() string {
	if m != nil {
		return m.Cut
	}
	return ""
}

func (m *Order) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

type Message struct {
	Id                   string                          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	File                 *descriptor.FileDescriptorProto `protobuf:"bytes,2,opt,name=file" json:"file,omitempty"`
	Any                  *any.Any                        `protobuf:"bytes,3,opt,name=any" json:"any,omitempty"`
	Duration             *duration.Duration              `protobuf:"bytes,4,opt,name=duration" json:"duration,omitempty"`
	Ts                   *timestamp.Timestamp            `protobuf:"bytes,5,opt,name=ts" json:"ts,omitempty"`
	Empty                *empty.Empty                    `protobuf:"bytes,6,opt,name=empty" json:"empty,omitempty"`
	Struct               *_struct.Struct                 `protobuf:"bytes,7,opt,name=struct" json:"struct,omitempty"`
	BytesWrapper         *wrappers.BytesValue            `protobuf:"bytes,8,opt,name=bytes_wrapper,json=bytesWrapper" json:"bytes_wrapper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_order_5d79139a5e6db799, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetFile() *descriptor.FileDescriptorProto {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Message) GetAny() *any.Any {
	if m != nil {
		return m.Any
	}
	return nil
}

func (m *Message) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Message) GetTs() *timestamp.Timestamp {
	if m != nil {
		return m.Ts
	}
	return nil
}

func (m *Message) GetEmpty() *empty.Empty {
	if m != nil {
		return m.Empty
	}
	return nil
}

func (m *Message) GetStruct() *_struct.Struct {
	if m != nil {
		return m.Struct
	}
	return nil
}

func (m *Message) GetBytesWrapper() *wrappers.BytesValue {
	if m != nil {
		return m.BytesWrapper
	}
	return nil
}

var E_MyOption = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         10001,
	Name:          "proto.my_option",
	Tag:           "bytes,10001,opt,name=my_option,json=myOption",
	Filename:      "order.proto",
}

func init() {
	proto.RegisterType((*Order)(nil), "proto.Order")
	proto.RegisterType((*Message)(nil), "proto.Message")
	proto.RegisterExtension(E_MyOption)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	GetPost(ctx context.Context, in *Order, opts ...grpc.CallOption) (*empty.Empty, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetPost(ctx context.Context, in *Order, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.OrderService/GetPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	GetPost(context.Context, *Order) (*empty.Empty, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OrderService/GetPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetPost(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPost",
			Handler:    _OrderService_GetPost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_order_5d79139a5e6db799) }

var fileDescriptor_order_5d79139a5e6db799 = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xdf, 0x6a, 0xd4, 0x40,
	0x14, 0x87, 0xd9, 0x6c, 0xf7, 0x4f, 0x67, 0x57, 0xd1, 0x41, 0x74, 0xba, 0x2d, 0xb6, 0x2c, 0x22,
	0x52, 0x25, 0x81, 0x8a, 0x20, 0x05, 0x41, 0x4b, 0xd5, 0x2b, 0x6d, 0x99, 0x8a, 0x5e, 0x96, 0xd9,
	0xdd, 0xd3, 0x30, 0x90, 0x64, 0x86, 0x99, 0x89, 0x92, 0x5b, 0xdf, 0x40, 0x7c, 0x34, 0x5f, 0xc1,
	0xf7, 0x50, 0x72, 0x66, 0xd2, 0x8b, 0x0c, 0x7b, 0x95, 0xe4, 0xfc, 0xbe, 0x2f, 0x67, 0x72, 0x0e,
	0x21, 0x33, 0x65, 0x36, 0x60, 0x52, 0x6d, 0x94, 0x53, 0x74, 0x84, 0x97, 0xc5, 0x41, 0xae, 0x54,
	0x5e, 0x40, 0x26, 0xb4, 0xcc, 0x44, 0x55, 0x29, 0x27, 0x9c, 0x54, 0x95, 0xf5, 0xd0, 0x62, 0x2f,
	0xa4, 0xf8, 0xb4, 0xaa, 0x6f, 0x32, 0x51, 0x35, 0x21, 0x7a, 0xdc, 0x8f, 0x36, 0xb5, 0x41, 0x37,
	0xe4, 0x87, 0xfd, 0xdc, 0xc9, 0x12, 0xac, 0x13, 0xa5, 0x0e, 0xc0, 0x7e, 0x1f, 0x80, 0x52, 0xbb,
	0xee, 0xed, 0x07, 0xfd, 0xd0, 0x3a, 0x53, 0xaf, 0xdd, 0xb6, 0xde, 0x3f, 0x8c, 0xd0, 0x1a, 0x4c,
	0x77, 0xec, 0xa3, 0xe8, 0x6c, 0x60, 0xd7, 0x46, 0x6a, 0xa7, 0xc2, 0xd7, 0x2f, 0x9f, 0x93, 0xd1,
	0x45, 0x3b, 0x0c, 0x7a, 0x8f, 0x0c, 0xd7, 0xb5, 0x63, 0x83, 0xa3, 0xc1, 0xb3, 0x5d, 0xde, 0xde,
	0xb6, 0x15, 0x91, 0x03, 0x4b, 0x7c, 0x45, 0xe4, 0xb0, 0xfc, 0x97, 0x90, 0xc9, 0x27, 0xb0, 0x56,
	0xe4, 0x40, 0xef, 0x92, 0x44, 0x6e, 0x02, 0x9e, 0xc8, 0x0d, 0x7d, 0x4d, 0x76, 0x6e, 0x64, 0xe1,
	0xf1, 0xd9, 0xc9, 0x93, 0xd4, 0x77, 0x4e, 0xbb, 0xce, 0xe9, 0x07, 0x59, 0xc0, 0xf9, 0x6d, 0xf7,
	0xcb, 0xb6, 0xcc, 0xd1, 0xa0, 0x4f, 0xc9, 0x50, 0x54, 0x0d, 0x1b, 0xa2, 0xf8, 0x20, 0x12, 0xdf,
	0x55, 0x0d, 0x6f, 0x01, 0xfa, 0x8a, 0x4c, 0xbb, 0xd1, 0xb2, 0x1d, 0x84, 0xf7, 0x22, 0xf8, 0x3c,
	0x00, 0xfc, 0x16, 0xa5, 0xc7, 0x24, 0x71, 0x96, 0x8d, 0x50, 0x58, 0x44, 0xc2, 0x97, 0x6e, 0x19,
	0x3c, 0x71, 0x96, 0xbe, 0x20, 0x23, 0x1c, 0x3e, 0x1b, 0x23, 0xfe, 0x30, 0xc2, 0xdf, 0xb7, 0x29,
	0xf7, 0x10, 0xcd, 0xc8, 0xd8, 0x6f, 0x83, 0x4d, 0x10, 0x7f, 0x14, 0xe1, 0x57, 0x18, 0xf3, 0x80,
	0xd1, 0xb7, 0xe4, 0xce, 0xaa, 0x71, 0x60, 0xaf, 0xc3, 0x9a, 0xd8, 0x14, 0xbd, 0xfd, 0xc8, 0x3b,
	0x6b, 0xa9, 0xaf, 0xa2, 0xa8, 0x81, 0xcf, 0xd1, 0xf8, 0xe6, 0x85, 0x13, 0x4e, 0xe6, 0xb8, 0xae,
	0x2b, 0x30, 0xdf, 0xe5, 0x1a, 0xe8, 0x19, 0x99, 0x7c, 0x04, 0x77, 0xa9, 0xac, 0xa3, 0x73, 0xaf,
	0xa7, 0x98, 0x2f, 0xb6, 0x1c, 0x7d, 0x79, 0xff, 0xe7, 0x9f, 0xbf, 0xbf, 0x93, 0xd9, 0x72, 0x9c,
	0xe1, 0x3f, 0x70, 0x3a, 0x38, 0x3e, 0x7d, 0x43, 0x76, 0xcb, 0xe6, 0x5a, 0x69, 0x9c, 0xd6, 0x61,
	0xe4, 0x85, 0x85, 0x5f, 0x60, 0x6e, 0xd9, 0xaf, 0xcf, 0xb8, 0xf2, 0x69, 0xd9, 0xf8, 0xca, 0x6a,
	0x8c, 0xe4, 0xcb, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0x4d, 0x4e, 0x76, 0x55, 0x03, 0x00,
	0x00,
}
